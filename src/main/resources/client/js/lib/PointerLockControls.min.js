THREE.PointerLockControls=function(e,t){void 0===t&&(console.warn('THREE.PointerLockControls: The second parameter "domElement" is now mandatory.'),t=document.body),this.domElement=t,this.isLocked=!1;var o,n=this,i={type:"change"},r={type:"lock"},c={type:"unlock"},s=new THREE.Euler(0,0,0,"YXZ"),m=Math.PI/2,u=new THREE.Vector3;function d(t){if(!1!==n.isLocked){var o=t.movementX||t.mozMovementX||t.webkitMovementX||0,r=t.movementY||t.mozMovementY||t.webkitMovementY||0;s.setFromQuaternion(e.quaternion),s.y-=.002*o,s.x-=.002*r,s.x=Math.max(-m,Math.min(m,s.x)),e.quaternion.setFromEuler(s),n.dispatchEvent(i)}}function a(){document.pointerLockElement===n.domElement?(n.dispatchEvent(r),n.isLocked=!0):(n.dispatchEvent(c),n.isLocked=!1)}function E(){console.error("THREE.PointerLockControls: Unable to use Pointer Lock API")}this.connect=function(){document.addEventListener("mousemove",d,!1),document.addEventListener("pointerlockchange",a,!1),document.addEventListener("pointerlockerror",E,!1)},this.disconnect=function(){document.removeEventListener("mousemove",d,!1),document.removeEventListener("pointerlockchange",a,!1),document.removeEventListener("pointerlockerror",E,!1)},this.dispose=function(){this.disconnect()},this.getObject=function(){return e},this.getDirection=(o=new THREE.Vector3(0,0,-1),function(t){return t.copy(o).applyQuaternion(e.quaternion)}),this.moveForward=function(t){u.setFromMatrixColumn(e.matrix,0),u.crossVectors(e.up,u),e.position.addScaledVector(u,t)},this.moveRight=function(t){u.setFromMatrixColumn(e.matrix,0),e.position.addScaledVector(u,t)},this.lock=function(){this.domElement.requestPointerLock()},this.unlock=function(){document.exitPointerLock()},this.connect()},THREE.PointerLockControls.prototype=Object.create(THREE.EventDispatcher.prototype),THREE.PointerLockControls.prototype.constructor=THREE.PointerLockControls;